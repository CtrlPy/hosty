{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"requ",
				"requests "
			],
			[
				"ai",
				"airflow-worker-hpa"
			],
			[
				"me",
				"metadata "
			],
			[
				"min",
				"minReplicas "
			],
			[
				"dblab_",
				"dblab_pool"
			],
			[
				"yos",
				"yoshi5432"
			],
			[
				"deploym",
				"deployment-api"
			],
			[
				"ho",
				"hosts"
			],
			[
				"serv",
				"service-api.yaml"
			],
			[
				"c",
				"check-status"
			],
			[
				"cl",
				"cluster-create"
			],
			[
				"re",
				"region"
			],
			[
				"tr",
				"transferServer"
			],
			[
				"istio-in",
				"istio-ingress"
			],
			[
				"is",
				"istio-ingress"
			],
			[
				"isti",
				"istio-ingress"
			],
			[
				"cer",
				"cert-manager"
			],
			[
				"route",
				"route53-secret"
			],
			[
				"a",
				"apiVersion"
			],
			[
				"n",
				"nginx"
			],
			[
				"po",
				"ports"
			],
			[
				"ap",
				"app"
			],
			[
				"istio",
				"istio-ingress"
			],
			[
				"un",
				"undefined"
			],
			[
				"B",
				"Bucket"
			],
			[
				"fr",
				"fr_list"
			],
			[
				"la",
				"last_owned"
			],
			[
				"ca",
				"cameras"
			],
			[
				"nam",
				"name_frd"
			],
			[
				"na",
				"name_heroes"
			],
			[
				"mess",
				"message_man"
			],
			[
				"f",
				"full_name"
			],
			[
				"title",
				"istitle()"
			],
			[
				"pri",
				"print"
			],
			[
				"p",
				"print"
			],
			[
				"pr",
				"print"
			]
		]
	},
	"buffers":
	[
		{
			"file": "hos.py",
			"settings":
			{
				"buffer_size": 7730,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					278,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALYKAAAAAAAAtwoAAAAAAAAAAAAAtwoAAAAAAAC7CgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtgoAAAAAAAC2CgAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					1,
					"left_delete",
					null,
					"AQAAALcKAAAAAAAAtwoAAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuwoAAAAAAAC7CgAAAAAAAAAAAAAAAPC/"
				],
				[
					283,
					1,
					"left_delete",
					null,
					"AQAAALYKAAAAAAAAtgoAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtwoAAAAAAAC3CgAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAABcAAAAAAAAAGAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFwAAAAAAAAAXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					293,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAABgAAAAAAAAAGQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGAAAAAAAAAAYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": "por"
					},
					"AwAAABkAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABwAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGQAAAAAAAAAZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					1,
					"insert_completion",
					{
						"completion": "import",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "import"
					},
					"AgAAABcAAAAAAAAAFwAAAAAAAAAFAAAAaW1wb3IXAAAAAAAAAB0AAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": " sys"
					},
					"BAAAAB0AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAIQAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHQAAAAAAAAAdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					298,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIQAAAAAAAAAhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					306,
					1,
					"left_delete",
					null,
					"AQAAAOENAAAAAAAA4Q0AAAAAAAAdAAAAIiAtIFJ1biB3aXRoIHJvb3QgcmlnaHRzISEhIiw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/g0AAAAAAADhDQAAAAAAAAAAAAAAAPC/"
				],
				[
					309,
					1,
					"left_delete",
					null,
					"AQAAAN0NAAAAAAAA3Q0AAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4Q0AAAAAAADhDQAAAAAAAAAAAAAAAPC/"
				],
				[
					311,
					1,
					"left_delete",
					null,
					"AQAAANkNAAAAAAAA2Q0AAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3Q0AAAAAAADdDQAAAAAAAAAAAAAAAPC/"
				],
				[
					313,
					1,
					"left_delete",
					null,
					"AQAAANUNAAAAAAAA1Q0AAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2Q0AAAAAAADZDQAAAAAAAAAAAAAAAPC/"
				],
				[
					315,
					1,
					"left_delete",
					null,
					"AQAAANENAAAAAAAA0Q0AAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1Q0AAAAAAADVDQAAAAAAAAAAAAAAAPC/"
				],
				[
					317,
					1,
					"left_delete",
					null,
					"AQAAANANAAAAAAAA0A0AAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0Q0AAAAAAADRDQAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANANAAAAAAAA0Q0AAAAAAAAAAAAA0Q0AAAAAAADhDQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0A0AAAAAAADQDQAAAAAAAAAAAAAAAPC/"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAACwNAAAAAAAALQ0AAAAAAAAAAAAALQ0AAAAAAAA9DQAAAAAAAAAAAADiDQAAAAAAAOINAAAAAAAAEAAAACAgICAgICAgICAgICAgICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALA0AAAAAAAAsDQAAAAAAAAAAAAAAAPC/"
				],
				[
					345,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAOENAAAAAAAA4g0AAAAAAAAAAAAA4g0AAAAAAADyDQAAAAAAAAAAAAAtDQAAAAAAAC0NAAAAAAAAEAAAACAgICAgICAgICAgICAgICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4Q0AAAAAAADhDQAAAAAAAAAAAAAAAPC/"
				],
				[
					348,
					1,
					"paste",
					null,
					"AQAAAOINAAAAAAAA/Q0AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4g0AAAAAAADiDQAAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					1,
					"left_delete",
					null,
					"AQAAAPwNAAAAAAAA/A0AAAAAAAABAAAALA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/Q0AAAAAAAD9DQAAAAAAAAAAAAAAAPC/"
				],
				[
					353,
					1,
					"left_delete",
					null,
					"AQAAAPoNAAAAAAAA+g0AAAAAAAABAAAAdA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+w0AAAAAAAD7DQAAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					20,
					"left_delete",
					null,
					"FAAAAPkNAAAAAAAA+Q0AAAAAAAABAAAAc/gNAAAAAAAA+A0AAAAAAAABAAAAb/cNAAAAAAAA9w0AAAAAAAABAAAAaPYNAAAAAAAA9g0AAAAAAAABAAAAIPUNAAAAAAAA9Q0AAAAAAAABAAAAZfQNAAAAAAAA9A0AAAAAAAABAAAAdvMNAAAAAAAA8w0AAAAAAAABAAAAb/INAAAAAAAA8g0AAAAAAAABAAAAbfENAAAAAAAA8Q0AAAAAAAABAAAAZfANAAAAAAAA8A0AAAAAAAABAAAAcu8NAAAAAAAA7w0AAAAAAAABAAAAIO4NAAAAAAAA7g0AAAAAAAABAAAAb+0NAAAAAAAA7Q0AAAAAAAABAAAAdOwNAAAAAAAA7A0AAAAAAAABAAAAIOsNAAAAAAAA6w0AAAAAAAABAAAAZeoNAAAAAAAA6g0AAAAAAAABAAAAdOkNAAAAAAAA6Q0AAAAAAAABAAAAZegNAAAAAAAA6A0AAAAAAAABAAAAbOcNAAAAAAAA5w0AAAAAAAABAAAAZeYNAAAAAAAA5g0AAAAAAAABAAAARA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+g0AAAAAAAD6DQAAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					1,
					"insert",
					{
						"characters": "**************"
					},
					"DgAAAOYNAAAAAAAA5w0AAAAAAAAAAAAA5w0AAAAAAADoDQAAAAAAAAAAAADoDQAAAAAAAOkNAAAAAAAAAAAAAOkNAAAAAAAA6g0AAAAAAAAAAAAA6g0AAAAAAADrDQAAAAAAAAAAAADrDQAAAAAAAOwNAAAAAAAAAAAAAOwNAAAAAAAA7Q0AAAAAAAAAAAAA7Q0AAAAAAADuDQAAAAAAAAAAAADuDQAAAAAAAO8NAAAAAAAAAAAAAO8NAAAAAAAA8A0AAAAAAAAAAAAA8A0AAAAAAADxDQAAAAAAAAAAAADxDQAAAAAAAPINAAAAAAAAAAAAAPINAAAAAAAA8w0AAAAAAAAAAAAA8w0AAAAAAAD0DQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5g0AAAAAAADmDQAAAAAAAAAAAAAAAPC/"
				],
				[
					357,
					1,
					"insert",
					{
						"characters": "******"
					},
					"BgAAAPQNAAAAAAAA9Q0AAAAAAAAAAAAA9Q0AAAAAAAD2DQAAAAAAAAAAAAD2DQAAAAAAAPcNAAAAAAAAAAAAAPcNAAAAAAAA+A0AAAAAAAAAAAAA+A0AAAAAAAD5DQAAAAAAAAAAAAD5DQAAAAAAAPoNAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9A0AAAAAAAD0DQAAAAAAAAAAAAAAAPC/"
				],
				[
					358,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAPoNAAAAAAAA+w0AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+g0AAAAAAAD6DQAAAAAAAAAAAAAAAPC/"
				],
				[
					359,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPsNAAAAAAAA/A0AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+w0AAAAAAAD7DQAAAAAAAAAAAAAAAPC/"
				],
				[
					361,
					1,
					"left_delete",
					null,
					"AQAAAPsNAAAAAAAA+w0AAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/A0AAAAAAAD8DQAAAAAAAAAAAAAAAPC/"
				],
				[
					368,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+w0AAAAAAAD7DQAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"left_delete",
					null,
					"AQAAAOMNAAAAAAAA4w0AAAAAAAABAAAALQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5A0AAAAAAADkDQAAAAAAAAAAAAAAAPC/"
				],
				[
					379,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOMNAAAAAAAA5A0AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4w0AAAAAAADjDQAAAAAAAAAAAAAAAPC/"
				],
				[
					381,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5A0AAAAAAADkDQAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"left_delete",
					null,
					"AQAAAPkNAAAAAAAA+Q0AAAAAAAABAAAAKg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+g0AAAAAAAD6DQAAAAAAAAAAAAAAAPC/"
				],
				[
					391,
					20,
					"left_delete",
					null,
					"FAAAAPgNAAAAAAAA+A0AAAAAAAABAAAAKvcNAAAAAAAA9w0AAAAAAAABAAAAKvYNAAAAAAAA9g0AAAAAAAABAAAAKvUNAAAAAAAA9Q0AAAAAAAABAAAAKvQNAAAAAAAA9A0AAAAAAAABAAAAKvMNAAAAAAAA8w0AAAAAAAABAAAAKvINAAAAAAAA8g0AAAAAAAABAAAAKvENAAAAAAAA8Q0AAAAAAAABAAAAKvANAAAAAAAA8A0AAAAAAAABAAAAKu8NAAAAAAAA7w0AAAAAAAABAAAAKu4NAAAAAAAA7g0AAAAAAAABAAAAKu0NAAAAAAAA7Q0AAAAAAAABAAAAKuwNAAAAAAAA7A0AAAAAAAABAAAAKusNAAAAAAAA6w0AAAAAAAABAAAAKuoNAAAAAAAA6g0AAAAAAAABAAAAKukNAAAAAAAA6Q0AAAAAAAABAAAAKugNAAAAAAAA6A0AAAAAAAABAAAAKucNAAAAAAAA5w0AAAAAAAABAAAAKuYNAAAAAAAA5g0AAAAAAAABAAAAKuUNAAAAAAAA5Q0AAAAAAAABAAAAKg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+Q0AAAAAAAD5DQAAAAAAAAAAAAAAAPC/"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAOUNAAAAAAAA5g0AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5Q0AAAAAAADlDQAAAAAAAAAAAAAAAPC/"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAOYNAAAAAAAA5w0AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5g0AAAAAAADmDQAAAAAAAAAAAAAAAPC/"
				],
				[
					396,
					1,
					"insert",
					{
						"characters": "____________"
					},
					"DAAAAOcNAAAAAAAA6A0AAAAAAAAAAAAA6A0AAAAAAADpDQAAAAAAAAAAAADpDQAAAAAAAOoNAAAAAAAAAAAAAOoNAAAAAAAA6w0AAAAAAAAAAAAA6w0AAAAAAADsDQAAAAAAAAAAAADsDQAAAAAAAO0NAAAAAAAAAAAAAO0NAAAAAAAA7g0AAAAAAAAAAAAA7g0AAAAAAADvDQAAAAAAAAAAAADvDQAAAAAAAPANAAAAAAAAAAAAAPANAAAAAAAA8Q0AAAAAAAAAAAAA8Q0AAAAAAADyDQAAAAAAAAAAAADyDQAAAAAAAPMNAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5w0AAAAAAADnDQAAAAAAAAAAAAAAAPC/"
				],
				[
					397,
					1,
					"insert",
					{
						"characters": "______"
					},
					"BgAAAPMNAAAAAAAA9A0AAAAAAAAAAAAA9A0AAAAAAAD1DQAAAAAAAAAAAAD1DQAAAAAAAPYNAAAAAAAAAAAAAPYNAAAAAAAA9w0AAAAAAAAAAAAA9w0AAAAAAAD4DQAAAAAAAAAAAAD4DQAAAAAAAPkNAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8w0AAAAAAADzDQAAAAAAAAAAAAAAAPC/"
				],
				[
					398,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAPkNAAAAAAAA+g0AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+Q0AAAAAAAD5DQAAAAAAAAAAAAAAAPC/"
				],
				[
					399,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+g0AAAAAAAD6DQAAAAAAAAAAAAAAAPC/"
				],
				[
					406,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACwNAAAAAAAALQ0AAAAAAAAAAAAALQ0AAAAAAAA9DQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALA0AAAAAAAAsDQAAAAAAAAAAAAAAAPC/"
				],
				[
					409,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPQ0AAAAAAAA9DQAAAAAAAAAAAAAAAPC/"
				],
				[
					420,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACwNAAAAAAAALQ0AAAAAAAAAAAAALQ0AAAAAAAA9DQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALA0AAAAAAAAsDQAAAAAAAAAAAAAAAPC/"
				],
				[
					423,
					1,
					"paste",
					null,
					"AQAAAD0NAAAAAAAAWA0AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPQ0AAAAAAAA9DQAAAAAAAAAAAAAAAPC/"
				],
				[
					427,
					1,
					"left_delete",
					null,
					"AQAAAFUNAAAAAAAAVQ0AAAAAAAABAAAAdA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVg0AAAAAAABWDQAAAAAAAAAAAAAAAPC/"
				],
				[
					429,
					21,
					"left_delete",
					null,
					"FQAAAFQNAAAAAAAAVA0AAAAAAAABAAAAc1MNAAAAAAAAUw0AAAAAAAABAAAAb1INAAAAAAAAUg0AAAAAAAABAAAAaFENAAAAAAAAUQ0AAAAAAAABAAAAIFANAAAAAAAAUA0AAAAAAAABAAAAZU8NAAAAAAAATw0AAAAAAAABAAAAdk4NAAAAAAAATg0AAAAAAAABAAAAb00NAAAAAAAATQ0AAAAAAAABAAAAbUwNAAAAAAAATA0AAAAAAAABAAAAZUsNAAAAAAAASw0AAAAAAAABAAAAckoNAAAAAAAASg0AAAAAAAABAAAAIEkNAAAAAAAASQ0AAAAAAAABAAAAb0gNAAAAAAAASA0AAAAAAAABAAAAdEcNAAAAAAAARw0AAAAAAAABAAAAIEYNAAAAAAAARg0AAAAAAAABAAAAZUUNAAAAAAAARQ0AAAAAAAABAAAAdEQNAAAAAAAARA0AAAAAAAABAAAAZUMNAAAAAAAAQw0AAAAAAAABAAAAbEINAAAAAAAAQg0AAAAAAAABAAAAZUENAAAAAAAAQQ0AAAAAAAABAAAAREANAAAAAAAAQA0AAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVQ0AAAAAAABVDQAAAAAAAAAAAAAAAPC/"
				],
				[
					430,
					2,
					"left_delete",
					null,
					"AgAAAD8NAAAAAAAAPw0AAAAAAAABAAAALT4NAAAAAAAAPg0AAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQA0AAAAAAABADQAAAAAAAAAAAAAAAPC/"
				],
				[
					432,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPg0AAAAAAAA+DQAAAAAAAAAAAAAAAPC/"
				],
				[
					446,
					1,
					"left_delete",
					null,
					"AQAAAA0OAAAAAAAADQ4AAAAAAAABAAAAXw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADg4AAAAAAAAODgAAAAAAAAAAAAAAAPC/"
				],
				[
					448,
					19,
					"left_delete",
					null,
					"EwAAAAwOAAAAAAAADA4AAAAAAAABAAAAXwsOAAAAAAAACw4AAAAAAAABAAAAXwoOAAAAAAAACg4AAAAAAAABAAAAXwkOAAAAAAAACQ4AAAAAAAABAAAAXwgOAAAAAAAACA4AAAAAAAABAAAAXwcOAAAAAAAABw4AAAAAAAABAAAAXwYOAAAAAAAABg4AAAAAAAABAAAAXwUOAAAAAAAABQ4AAAAAAAABAAAAXwQOAAAAAAAABA4AAAAAAAABAAAAXwMOAAAAAAAAAw4AAAAAAAABAAAAXwIOAAAAAAAAAg4AAAAAAAABAAAAXwEOAAAAAAAAAQ4AAAAAAAABAAAAXwAOAAAAAAAAAA4AAAAAAAABAAAAX/8NAAAAAAAA/w0AAAAAAAABAAAAX/4NAAAAAAAA/g0AAAAAAAABAAAAX/0NAAAAAAAA/Q0AAAAAAAABAAAAX/wNAAAAAAAA/A0AAAAAAAABAAAAX/sNAAAAAAAA+w0AAAAAAAABAAAAX/oNAAAAAAAA+g0AAAAAAAABAAAAXw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADQ4AAAAAAAANDgAAAAAAAAAAAAAAAPC/"
				],
				[
					449,
					1,
					"left_delete",
					null,
					"AQAAAPkNAAAAAAAA+Q0AAAAAAAABAAAAXw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+g0AAAAAAAD6DQAAAAAAAAAAAAAAAPC/"
				],
				[
					450,
					1,
					"insert",
					{
						"characters": "         "
					},
					"CQAAAPkNAAAAAAAA+g0AAAAAAAAAAAAA+g0AAAAAAAD7DQAAAAAAAAAAAAD7DQAAAAAAAPwNAAAAAAAAAAAAAPwNAAAAAAAA/Q0AAAAAAAAAAAAA/Q0AAAAAAAD+DQAAAAAAAAAAAAD+DQAAAAAAAP8NAAAAAAAAAAAAAP8NAAAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAABDgAAAAAAAAAAAAABDgAAAAAAAAIOAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+Q0AAAAAAAD5DQAAAAAAAAAAAAAAAPC/"
				],
				[
					452,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAAIOAAAAAAAAAw4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAg4AAAAAAAACDgAAAAAAAAAAAAAAAPC/"
				],
				[
					454,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAAMOAAAAAAAABA4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAw4AAAAAAAADDgAAAAAAAAAAAAAAAPC/"
				],
				[
					456,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAAQOAAAAAAAABQ4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABA4AAAAAAAAEDgAAAAAAAAAAAAAAAPC/"
				],
				[
					459,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAAIOAAAAAAAAAw4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAg4AAAAAAAACDgAAAAAAAAAAAAAAAPC/"
				],
				[
					462,
					1,
					"left_delete",
					null,
					"AQAAAAEOAAAAAAAAAQ4AAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAg4AAAAAAAACDgAAAAAAAAAAAAAAAPC/"
				],
				[
					464,
					1,
					"left_delete",
					null,
					"AQAAAAAOAAAAAAAAAA4AAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQ4AAAAAAAABDgAAAAAAAAAAAAAAAPC/"
				],
				[
					466,
					1,
					"left_delete",
					null,
					"AQAAAP8NAAAAAAAA/w0AAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAPC/"
				],
				[
					468,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAP8NAAAAAAAAAA4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/w0AAAAAAAD/DQAAAAAAAAAAAAAAAPC/"
				],
				[
					470,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAAAOAAAAAAAAAQ4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAPC/"
				],
				[
					473,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAPC/"
				],
				[
					479,
					1,
					"left_delete",
					null,
					"AQAAAPUNAAAAAAAA9Q0AAAAAAAASAAAAIiAgICAgICAgICAqKioqKiIs",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABw4AAAAAAAD1DQAAAAAAAAAAAAAAAPC/"
				],
				[
					481,
					1,
					"left_delete",
					null,
					"AQAAAPENAAAAAAAA8Q0AAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9Q0AAAAAAAD1DQAAAAAAAAAAAAAAAPC/"
				],
				[
					483,
					4,
					"left_delete",
					null,
					"BAAAAO0NAAAAAAAA7Q0AAAAAAAAEAAAAICAgIOkNAAAAAAAA6Q0AAAAAAAAEAAAAICAgIOUNAAAAAAAA5Q0AAAAAAAAEAAAAICAgIOQNAAAAAAAA5A0AAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8Q0AAAAAAADxDQAAAAAAAAAAAAAAAPC/"
				],
				[
					485,
					1,
					"left_delete",
					null,
					"AQAAAOMNAAAAAAAA4w0AAAAAAAABAAAALA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5A0AAAAAAADkDQAAAAAAAAAAAAAAAPC/"
				],
				[
					486,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4w0AAAAAAADjDQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": ".github/workflows/python-publish.yml",
			"settings":
			{
				"buffer_size": 1324,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "    __________________                  • Linux 6.12.1-arch1-1 \n   /    2356732      /\\                 • 41 mins \n  /   IBM System    /\\/\\                • 1039 (pacman), 33 (snap) \n /______*1984*_____/ /                  • Xfwm4 \n \\_________________\\/                   • /usr/bin/zsh 5.9 \n  \\ \\ \\ \\ \\ \\ \\ \\ \\ \\e[0m             󰑭  • 4853MiB / 7590MiB \n                                        • Intel i5-8365U (8) @ 4.100GHz \n\ndirenv: loading ~/Git/hos/.envrc                                                                                                                                                                                                                         \ndirenv: export +VIRTUAL_ENV ~PATH\n (python-3.12)  rocket@x1  ~/Git/hos   main ±✚                                                                                                                                                                             (k3d-k3s-cortex/default) ",
			"settings":
			{
				"buffer_size": 967,
				"line_ending": "Unix",
				"name": "Login Shell",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Docker Based Build Systems/Docker Compose.sublime-build",
					""
				],
				[
					"Packages/Docker Based Build Systems/Docker Compose.sublime-build",
					"Docker-compose build"
				],
				[
					"Packages/Docker Based Build Systems/Docker Compose.sublime-build",
					"Docker-compose kill"
				],
				[
					"Packages/Docker Based Build Systems/Docker Compose.sublime-build",
					"Docker-compose ports"
				],
				[
					"Packages/Docker Based Build Systems/Docker Compose.sublime-build",
					"Docker-compose rm"
				],
				[
					"Packages/Docker Based Build Systems/Docker Compose.sublime-build",
					"Docker-compose stop"
				],
				[
					"Packages/Docker Based Build Systems/Docker Compose.sublime-build",
					"Docker-compose restart"
				],
				[
					"Packages/Docker Based Build Systems/Docker Compose.sublime-build",
					"Docker-compose ps"
				],
				[
					"Packages/Docker Based Build Systems/Python in Docker Container.sublime-build",
					""
				],
				[
					"Packages/Docker Based Build Systems/Python in Docker Container.sublime-build",
					"Python v2.7 in Docker Container"
				],
				[
					"Packages/Docker Based Build Systems/Python in Docker Container.sublime-build",
					"Python v3.4 in Docker Container"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Docker Based Build Systems/Docker Compose.sublime-build",
					""
				],
				[
					"Packages/Docker Based Build Systems/Docker Compose.sublime-build",
					"Docker-compose build"
				],
				[
					"Packages/Docker Based Build Systems/Docker Compose.sublime-build",
					"Docker-compose kill"
				],
				[
					"Packages/Docker Based Build Systems/Docker Compose.sublime-build",
					"Docker-compose ports"
				],
				[
					"Packages/Docker Based Build Systems/Docker Compose.sublime-build",
					"Docker-compose rm"
				],
				[
					"Packages/Docker Based Build Systems/Docker Compose.sublime-build",
					"Docker-compose stop"
				],
				[
					"Packages/Docker Based Build Systems/Docker Compose.sublime-build",
					"Docker-compose restart"
				],
				[
					"Packages/Docker Based Build Systems/Docker Compose.sublime-build",
					"Docker-compose ps"
				],
				[
					"Packages/Docker Based Build Systems/Python in Docker Container.sublime-build",
					""
				],
				[
					"Packages/Docker Based Build Systems/Python in Docker Container.sublime-build",
					"Python v2.7 in Docker Container"
				],
				[
					"Packages/Docker Based Build Systems/Python in Docker Container.sublime-build",
					"Python v3.4 in Docker Container"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pref",
				"Preferences: RemoteEdit Settings"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: i",
				"Package Control: Install Package"
			],
			[
				"icons",
				"Preferences: A File Icon Settings"
			],
			[
				"sim",
				"SimpleSession: Load"
			],
			[
				"si",
				"SimpleSession: Save"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"re",
				"Package Control: Remove Package"
			],
			[
				"man",
				"Session Manager: Load Session"
			],
			[
				"mana",
				"Session Manager: Save Session"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"m",
				"Session Manager: Load Session"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"simp",
				"SimpleSession: Load"
			],
			[
				"ter",
				"Preferences: Terminus Settings"
			],
			[
				"the",
				"UI: Select Theme"
			],
			[
				"packe",
				"Package Control: Remove Package"
			],
			[
				"theme",
				"UI: Select Theme"
			],
			[
				"mat",
				"Material Theme: Activate theme"
			],
			[
				"preferences",
				"Preferences: LSP-terraform Settings"
			],
			[
				"i",
				"Package Control: Install Package"
			],
			[
				"terminus",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"LSP",
				"LSP: Restart Server"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/rocket/Git/hos",
		"/home/rocket/Git/hos/.github",
		"/home/rocket/Git/hos/.github/workflows"
	],
	"file_history":
	[
		"/home/rocket/Git/openvpn-plus/README.md",
		"/home/rocket/Git/openvpn-plus/lib/openvpn-plus-stack.ts",
		"/home/rocket/Git/openvpn-plus/docker-compose.yml",
		"/home/rocket/Git/openvpn-plus/.tool-versions",
		"/home/rocket/.config/neofetch/config.conf",
		"/home/rocket/Git/openvpn-plus/bin/openvpn-plus.ts",
		"/home/rocket/Git/vpn-wireguard/lib/vpn-wireguard-stack.ts",
		"/home/rocket/Git/vpn-wireguard/.tool-versions",
		"/home/rocket/Git/vpn-wireguard/bin/vpn-wireguard.ts",
		"/home/rocket/Git/security-hub/dojo/zap/docker-compose.yml",
		"/home/rocket/Git/security-hub/README.md",
		"/home/rocket/Git/security-hub/dojo/.tool-versions",
		"/home/rocket/Git/security-hub/dojo/values.yaml",
		"/home/rocket/Git/k3d-cust-devloper-env/base/cortex-api-sa.yaml",
		"/home/rocket/Git/k3d-cust-devloper-env/Makefile",
		"/home/rocket/Git/k3d-cust-devloper-env/registries-template.yaml",
		"/home/rocket/Git/airflow-kuberneres/values.yaml",
		"/home/rocket/Git/airflow-kuberneres/scaledobject.yaml",
		"/home/rocket/Git/airflow-kuberneres/README.md",
		"/home/rocket/Git/airflow-kuberneres/dags/copy-pdf-paralell.py",
		"/home/rocket/Git/airflow-kuberneres/hpa.yaml",
		"/home/rocket/Git/airflow-kuberneres/dags/ganerated-pdf2.py",
		"/home/rocket/Git/airflow-kuberneres/clear-backets3.py",
		"/home/rocket/Git/airflow-kuberneres/dags/s3-list-objects.py",
		"/home/rocket/Git/airflow-kuberneres/process-pdf.py",
		"/home/rocket/Git/airflow-kuberneres/Dockerfile",
		"/home/rocket/Git/airflow-kuberneres/copy-pdf-paralell.py",
		"/home/rocket/Git/airflow-kuberneres/ganerated_pdf.py",
		"/home/rocket/Git/airflow-kuberneres/dags/s3check.py",
		"/home/rocket/Git/airflow-kuberneres/s3-list-objects.py",
		"/home/rocket/Git/airflow-kuberneres/dags/test-dag.py",
		"/home/rocket/Git/airflow-kuberneres/dags/hello_world_dag.py",
		"/home/rocket/Git/airflow-kuberneres/data-storage-pvc.yaml",
		"/home/rocket/Git/airflow-kuberneres/sample.yaml",
		"/home/rocket/Git/airflow-kuberneres/spark-application.yaml",
		"/home/rocket/Git/airflow-kuberneres/airflow-logs-pv.yaml",
		"/home/rocket/Git/airflow-kuberneres/airflow-dags-pv.yaml",
		"/home/rocket/Git/airflow-kuberneres/charts/charts/airflow/values.yaml",
		"/home/rocket/Git/airflow-kuberneres/.tool-versions",
		"/home/rocket/Git/comprehend-medical-cdk/lib/comprehend-medical-cdk-stack.ts",
		"/home/rocket/Git/comprehend-medical-cdk/lambda/comprehendMedical.js",
		"/home/rocket/Git/comprehend-medical-cdk/lambda/package.json",
		"/home/rocket/Git/comprehend-medical-cdk/lib/lambda/comprehendMedical.js",
		"/home/rocket/Git/comprehend-medical-cdk/lib/lambda/package.json",
		"/home/rocket/Git/comprehend-medical-cdk/lib/lambda/comprehendMedical.ts",
		"/home/rocket/Git/cortex-ai/semantic_search.py",
		"/home/rocket/Git/cortex-ai/README.md",
		"/home/rocket/Git/cortex-ai/load_medical_terms.py",
		"/home/rocket/Git/cortex-ai/pdf_extractor.py",
		"/home/rocket/Git/cortex-ai/agent.py",
		"/home/rocket/Git/cortex-ai/main.py",
		"/home/rocket/Git/cortex-ai/context_preparer.py",
		"/home/rocket/Git/cortex-ai/models.py",
		"/home/rocket/Git/cortex-ai/create_vector_db.py",
		"/home/rocket/Git/cortex-ai/requirements.txt",
		"/home/rocket/Git/cortex-ai/static_date/MNG_DXI_ICD.csv",
		"/home/rocket/Git/multi-branch-k3d/base/cortex-api-sa.yaml",
		"/home/rocket/Git/multi-branch-k3d/Makefile",
		"/home/rocket/Git/prometheus_monitoring/promtail-values.yaml",
		"/home/rocket/Git/prometheus_monitoring/loki-values.yaml",
		"/home/rocket/Git/k3d-cust-devloper-env/overlays/kustomization.yaml",
		"/home/rocket/Git/k3d-cust-devloper-env/istio-gateway/istio-gateway.yaml",
		"/home/rocket/Git/k3d-cust-devloper-env/base/virtualservice.yaml",
		"/etc/tlp.conf",
		"/home/rocket/.config/kitty/current-theme.conf",
		"/home/rocket/.config/kitty/kitty.conf",
		"/home/rocket/Git/k3d-cust-devloper-env/cortex-api-sa.yaml",
		"/home/rocket/Git/k3d-cust-devloper-env/overlays/virtualservice-patch.yaml",
		"/home/rocket/Git/k3d-cust-devloper-env/base/deployment-api.yaml",
		"/home/rocket/Git/alacritty_tmux/alacritty.yml",
		"/home/rocket/Git/alacritty_tmux/tmux.conf",
		"/home/rocket/Git/alacritty_tmux/alacritty-with-tmux.sh",
		"/home/rocket/Git/alacritty_tmux/README.md",
		"/home/rocket/.p10k.zsh",
		"/home/rocket/Git/sftp-transfer-s3-cdk/package.json",
		"/home/rocket/Git/cortexanalytics.com/.github/workflows/astro.yml",
		"/home/rocket/Git/astro-cdk-infra/lib/astro-cdk-infra-stack.ts",
		"/home/rocket/Git/multi-branch-k3d/README.md",
		"/home/rocket/Git/multi-branch-k3d/overlays/virtualservice-patch.yaml",
		"/home/rocket/Git/multi-branch-k3d/overlays/kustomization.yaml",
		"/home/rocket/Git/pinnacle-kube-deployment/new-cortex-app/cortex-api/deployment-api.yaml",
		"/home/rocket/Git/pinnacle-kube-deployment/cortex-api-sa.yaml",
		"/home/rocket/Git/multi-branch-k3d/base/deployment-api.yaml",
		"/home/rocket/Git/multi-branch-k3d/cortex-api-sa.yaml",
		"/home/rocket/Git/hos/hos.PKGBUILD",
		"/home/rocket/Git/pgai-cdk-infra/lib/pgai-cdk-infra-stack.ts",
		"/home/rocket/Git/postgres-ai/server.yml",
		"/home/rocket/Git/postgres-ai/docker-compose.yaml",
		"/home/rocket/Git/postgres-ai-docker-compose/docker-compose.yaml",
		"/home/rocket/Git/zsh-oh-my/install_zsh_ohmyzsh.sh",
		"/home/rocket/Git/astro-cdk-infra/bin/astro-cdk-infra.ts",
		"/home/rocket/Git/astro-cdk-anfra/bin/astro-cdk-anfra.ts",
		"/home/rocket/Git/astro-cdk-anfra/lib/astro-cdk-anfra-stack.ts",
		"/home/rocket/Git/zsh-oh-my/README.md",
		"/home/rocket/Git/pgai-cdk-infra/bin/pgai-cdk-infra.ts",
		"/home/rocket/Git/postgres-ai-backup/server.yml",
		"/home/rocket/Git/postgres-ai-backup/docker-compose.yaml",
		"/home/rocket/Git/postgres-ai/README.md",
		"/home/rocket/Git/postgres-ai/initdb/init.sql",
		"/home/rocket/Git/postgres-ai-docker-compose/server.yml",
		"/home/rocket/Git/postgres-ai-docker-compose/README.md",
		"/home/rocket/Git/postgres-ai-docker-compose/initdb/init.sql",
		"/home/rocket/Git/postgres-ai-docker-compose/postgresql.conf",
		"/home/rocket/Git/cicd-management/.github/workflows/manual-update-eks.yml",
		"/home/rocket/Git/cicd-management/manual-update-eks.yml",
		"/home/rocket/Git/postgres-ai-docker-compose/postgresql.yaml",
		"/home/rocket/Git/postgres-ai-docker-compose/postgresqlai.yaml",
		"/home/rocket/Git/hos/.github/workflows/python-publish.yml",
		"/home/rocket/Git/hos/README.md",
		"/home/rocket/Git/hos/.github/workflows/build-feature.yml",
		"/home/rocket/Git/hos/setup.py",
		"/home/rocket/Git/hos/.releaserc",
		"/home/rocket/Git/hos/release.config.js",
		"/home/rocket/Git/hos/VERSION.txt",
		"/home/rocket/Git/hos/pyproject.toml",
		"/home/rocket/Git/k3d-cust-devloper-env/base/deployment-ui.yaml",
		"/home/rocket/Git/hos/hos.py",
		"/home/rocket/Git/hos/.tool-versions",
		"/home/rocket/Git/hos/.envrc",
		"/home/rocket/Git/k3d-cust-devloper-env/.tool-versions",
		"/home/rocket/.config/sublime-text/Packages/User/py(tilix).sublime-build",
		"/home/rocket/.config/sublime-text/Packages/User/python(tilix).sublime-build",
		"/home/rocket/Git/k3d-cust-devloper-env/base/kustomization.yaml",
		"/home/rocket/Git/k3d-cust-devloper-env/registries.yaml",
		"/home/rocket/Git/istio-gateway-virtualservice-k3d/Makefile",
		"/home/rocket/Git/kustomize-example/Makefile",
		"/home/rocket/Git/kustomize-example/base/virtualservice.yaml",
		"/home/rocket/Git/kustomize-example/makefile"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 125.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "hos.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7730,
						"regions":
						{
						},
						"selection":
						[
							[
								5900,
								5900
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2808.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": ".github/workflows/python-publish.yml",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1324,
						"regions":
						{
						},
						"selection":
						[
							[
								1324,
								1324
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 540.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 2,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 967,
						"regions":
						{
						},
						"selection":
						[
							[
								771,
								771
							]
						],
						"settings":
						{
							"__vi_external_disable": true,
							"auto_complete": false,
							"auto_complete_commit_on_tab": false,
							"bracket_highlighter.clone_locations":
							{
							},
							"bracket_highlighter.ignore": true,
							"color_scheme": "Terminus.hidden-color-scheme",
							"default_dir": "/home/rocket/Git/hos",
							"draw_centered": false,
							"draw_indent_guides": false,
							"draw_unicode_white_space": false,
							"draw_white_space": "none",
							"git_gutter_is_enabled": false,
							"gutter": false,
							"highlight_line": false,
							"incomplete_sync": null,
							"is_widget": true,
							"result_base_dir": "/home/rocket/Git/hos",
							"result_file_regex": null,
							"result_line_regex": null,
							"rulers":
							[
								500
							],
							"scroll_past_end": true,
							"syntax": "Terminus View.sublime-syntax",
							"terminus.highlight_counter": 25,
							"terminus_view": true,
							"terminus_view.args":
							{
								"auto_close": true,
								"cancellable": false,
								"cmd":
								[
									"/usr/bin/zsh",
									"-i",
									"-l"
								],
								"cwd": "/home/rocket/Git/hos",
								"default_title": "Login Shell",
								"env":
								{
									"LANG": "C.UTF-8",
									"PROMPT_TOOLKIT_COLOR_DEPTH": "DEPTH_8_BIT",
									"TERM": "xterm-256color",
									"TERMINUS_SUBLIME": "1",
									"TERM_PROGRAM": "Terminus-Sublime"
								},
								"file_regex": null,
								"line_regex": null,
								"panel_name": "Terminus",
								"reactivable": true,
								"show_in_panel": null,
								"tag": null,
								"timeit": false,
								"title": null,
								"view_settings":
								{
								}
							},
							"terminus_view.cancellable": false,
							"terminus_view.key.ctrl+k": true,
							"terminus_view.key.ctrl+p": true,
							"terminus_view.natural_keyboard": true,
							"terminus_view.reactivable": true,
							"terminus_view.tag": null,
							"terminus_view.viewport_y": 0.0,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 49.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				0,
				1,
				1,
				2
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			0.495356975158,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.SFTP":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 326.0
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 249.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.references":
	{
		"height": 120.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "hos.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Git/Neofetch/neofetch.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 288.0,
	"status_bar_visible": false,
	"template_settings":
	{
	}
}
